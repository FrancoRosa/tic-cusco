[{"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\index.js":"1","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\App.js":"2","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\reducers\\index.js":"3","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\firebase.js":"4","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\AdminProduct.jsx":"5","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\Login.jsx":"6","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\AdminDashboard.jsx":"7","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\Checkout.jsx":"8","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\AdminEdit.jsx":"9","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\AdminNew.jsx":"10","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\Payment.jsx":"11","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\AdminLogin.jsx":"12","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\material\\Home.jsx":"13","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\material\\Header.jsx":"14","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\reducers\\admin.js":"15","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\reducers\\user.js":"16","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\reducers\\basket.js":"17","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\reducers\\products.js":"18","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\actions\\index.js":"19","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\Subtotal.jsx":"20","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\BasketItem.jsx":"21","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\CheckoutProduct.jsx":"22","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\material\\HomeProduct.jsx":"23","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\reducers\\filter.js":"24","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\material\\HomeCarrousel.jsx":"25"},{"size":350,"mtime":1608854528426,"results":"26","hashOfConfig":"27"},{"size":2870,"mtime":1609990543028,"results":"28","hashOfConfig":"27"},{"size":498,"mtime":1610062403643,"results":"29","hashOfConfig":"27"},{"size":537,"mtime":1609124023741,"results":"30","hashOfConfig":"27"},{"size":2459,"mtime":1609949148747,"results":"31","hashOfConfig":"27"},{"size":1688,"mtime":1608917657008,"results":"32","hashOfConfig":"27"},{"size":5631,"mtime":1609949148738,"results":"33","hashOfConfig":"27"},{"size":915,"mtime":1608872968801,"results":"34","hashOfConfig":"27"},{"size":13803,"mtime":1609949148747,"results":"35","hashOfConfig":"27"},{"size":11550,"mtime":1609949148747,"results":"36","hashOfConfig":"27"},{"size":1769,"mtime":1609017377157,"results":"37","hashOfConfig":"27"},{"size":1666,"mtime":1609282134615,"results":"38","hashOfConfig":"27"},{"size":999,"mtime":1610321299063,"results":"39","hashOfConfig":"27"},{"size":8233,"mtime":1610127240288,"results":"40","hashOfConfig":"27"},{"size":223,"mtime":1609077419695,"results":"41","hashOfConfig":"27"},{"size":217,"mtime":1608919270967,"results":"42","hashOfConfig":"27"},{"size":1012,"mtime":1608867235725,"results":"43","hashOfConfig":"27"},{"size":227,"mtime":1609360201094,"results":"44","hashOfConfig":"27"},{"size":915,"mtime":1610062509723,"results":"45","hashOfConfig":"27"},{"size":902,"mtime":1609284378152,"results":"46","hashOfConfig":"27"},{"size":1158,"mtime":1609639725013,"results":"47","hashOfConfig":"27"},{"size":330,"mtime":1608997914709,"results":"48","hashOfConfig":"27"},{"size":2456,"mtime":1610134423002,"results":"49","hashOfConfig":"27"},{"size":221,"mtime":1610062450687,"results":"50","hashOfConfig":"27"},{"size":507,"mtime":1610405571327,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"9fc4sd",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\index.js",[],["106","107"],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\App.js",["108"],"import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n// import Header from './Header';\r\nimport Header from './material/Header';\r\n// import Home from './Home';\r\nimport Home from './material/Home';\r\nimport Checkout from './Checkout';\r\nimport Login from './Login';\r\nimport Payment from './Payment';\r\nimport AdminLogin from './AdminLogin';\r\nimport AdminDashboard from './AdminDashboard';\r\nimport AdminProduct from './AdminProduct';\r\nimport AdminNew from './AdminNew';\r\nimport AdminEdit from './AdminEdit';\r\nimport { auth } from '../firebase';\r\nimport { setProducts, setUser } from '../actions';\r\nimport { db } from '../firebase';\r\n\r\n\r\n\r\n\r\nconst App = ({ user, setUser, products, setProducts }) => {\r\n  \r\n  const getProducts = () => {\r\n    console.log('... reading products from Firebase')\r\n    const allProducts = [];\r\n    db.collection('products').get()\r\n    .then(query => {\r\n      console.log('... saving data on redux store')\r\n      query.forEach(doc => allProducts.push({ ...doc.data(), id: doc.id }));\r\n      setProducts(allProducts);\r\n    })\r\n    .catch(error => {\r\n      console.error(error)\r\n    })\r\n  }\r\n  \r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        setUser(authUser);\r\n      } else {\r\n        setUser(null);\r\n      }\r\n    });\r\n    getProducts();\r\n  }, [])\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Switch>\r\n          \r\n          <Route path=\"/new\">\r\n            <AdminNew />\r\n          </Route>\r\n          \r\n          <Route path=\"/dashboard/undefined\">\r\n            <AdminDashboard />\r\n          </Route>\r\n\r\n          <Route path=\"/dashboard/:id\">\r\n            <AdminProduct />\r\n          </Route>\r\n\r\n          <Route path=\"/edit/:id\">\r\n            <AdminEdit />\r\n          </Route>\r\n\r\n          <Route path=\"/dashboard\">\r\n            <AdminDashboard />\r\n          </Route>\r\n\r\n          <Route path=\"/admin\">\r\n            <AdminLogin />\r\n          </Route>\r\n          \r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          \r\n          <Route path=\"/checkout\">\r\n            <Header user={user}/>\r\n            <Checkout />\r\n          </Route>\r\n          \r\n          <Route path=\"/payment\">\r\n            <Header user={user}/>\r\n            <Payment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Header user={user} />\r\n            <Home />\r\n          </Route>\r\n\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\nconst mapStateToProps = state => ({\r\n  user: state.user,\r\n  products: state.products,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setUser: user => dispatch(setUser(user)),\r\n  setProducts: products => dispatch(setProducts(products)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\reducers\\index.js",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\firebase.js",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\AdminProduct.jsx",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\Login.jsx",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\AdminDashboard.jsx",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\Checkout.jsx",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\AdminEdit.jsx",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\AdminNew.jsx",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\Payment.jsx",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\AdminLogin.jsx",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\material\\Home.jsx",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\material\\Header.jsx",["109"],"import React from 'react';\r\n\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\r\nimport { Button } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { setFilter } from '../../actions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Header = ({ basket, user, setFilter, products }) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsNoneOutlinedIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const getOptions = products => {\r\n    const options = [];\r\n    products.forEach(product => {\r\n      if (!options.includes(product.brand)) options.push(product.brand)\r\n      product.categories.forEach(category => {\r\n        if (!options.includes(category)) options.push(category)\r\n      })\r\n    })\r\n    return options;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" color=\"transparent\">\r\n        <Toolbar>\r\n          <img alt=\"logo\" src=\"/img/logo.png\"\r\n            style={{\r\n              display: \"block\",\r\n              maxHeight: \"3rem\",\r\n              width: \"auto\",\r\n              height: \"auto\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          />\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <Autocomplete\r\n              options={getOptions(products)}\r\n              id=\"debug\"\r\n              debug\r\n              renderInput={(params) =>\r\n                <InputBase\r\n                  {...params}\r\n                  placeholder=\"Buscar producto, marca...\"\r\n                  classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput,\r\n                  }}\r\n                  inputProps={{ 'aria-label': 'search' }}\r\n                  onChange={e => setFilter(e.target.value)}\r\n                />\r\n              }\r\n            />\r\n\r\n          {/* <Autocomplete\r\n            options={getOptions(products)}\r\n            id=\"debug\"\r\n            debug\r\n            renderInput={(params) => <TextField {...params} label=\"Buscar\" margin=\"normal\" placeholder=\"Buscar producto, marca\"/>}\r\n          /> */}\r\n          </div>\r\n\r\n          <div className={classes.grow} />\r\n          <Button style={{textTransform: 'none'}} color=\"inherit\">Crea tu cuenta</Button>\r\n          <Button style={{textTransform: 'none'}} color=\"inherit\">Ingresa</Button>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={1} color=\"secondary\">\r\n              <NotificationsNoneOutlinedIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={basket.reduce((sum, item)=> sum + item.count ,0)} color=\"secondary\">\r\n              <ShoppingCartOutlinedIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <div className={classes.sectionDesktop}>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFilter: filter => dispatch(setFilter(filter)),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  basket: state.basket,\r\n  products: state.products,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\reducers\\admin.js",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\reducers\\user.js",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\reducers\\basket.js",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\reducers\\products.js",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\actions\\index.js",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\Subtotal.jsx",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\BasketItem.jsx",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\CheckoutProduct.jsx",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\material\\HomeProduct.jsx",["110"],"import { connect } from 'react-redux';\r\nimport { addToBasket } from '../../actions';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport cx from 'clsx';\r\nimport { useSoftRiseShadowStyles } from '@mui-treasury/styles/shadow/softRise'\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 300,\r\n    minWidth: 250,\r\n    height: 400,\r\n    margin: \"1rem\",\r\n  },\r\n  media: {\r\n    height: 240,\r\n    padding: \"1rem\",\r\n  },\r\n  actions: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  }\r\n});\r\n\r\nconst HomeProduct = ({ product, addToBasket }) => {\r\n  const {\r\n    id,\r\n    title,\r\n    price,\r\n    urls\r\n  } = product;\r\n\r\n  const classes = useStyles();\r\n  const shadowStyles = useSoftRiseShadowStyles();\r\n  return (\r\n    <Card className={cx(classes.root, shadowStyles.root)}\r\n    >\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={urls[0]}\r\n          title={title}\r\n          />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            <span>S/. </span>{`${price}.00`}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"\r\n            style={{\r\n              whiteSpace: \"nowrap\",\r\n              overflow: \"hidden\",\r\n              textOverflow: \"ellipsis\",\r\n            }}\r\n            onMouseEnter={e=>console.log(e)}\r\n          >\r\n            {title}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions \r\n        className={classes.actions}\r\n      >\r\n        <Button\r\n          startIcon={<AddIcon />}\r\n          style={{textTransform: 'none'}}\r\n          variant=\"outlined\" size=\"small\" color=\"black\"\r\n          onClick={() => addToBasket(product)}\r\n        >\r\n          Añadir al carrito\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addToBasket: item => dispatch(addToBasket(item)),\r\n\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(HomeProduct);","C:\\Users\\fx\\Upwork\\tic-cusco\\src\\reducers\\filter.js",[],"C:\\Users\\fx\\Upwork\\tic-cusco\\src\\components\\material\\HomeCarrousel.jsx",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":48,"column":6,"nodeType":"117","endLine":48,"endColumn":8,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":20,"column":8,"nodeType":"121","messageId":"122","endLine":20,"endColumn":17},{"ruleId":"119","severity":1,"message":"123","line":35,"column":5,"nodeType":"121","messageId":"122","endLine":35,"endColumn":7},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getProducts' and 'setUser'. Either include them or remove the dependency array. If 'setUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["126"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [getProducts, setUser]",{"range":"129","text":"130"},[1411,1413],"[getProducts, setUser]"]